// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using TitanMessaging.EntityFramework;

namespace TitanMessaging.EntityFramework.Data
{
    [DbContext(typeof(ChatDbContext))]
    partial class ChatDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "2.2.6-servicing-10079")
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("TitanMessaging.Core.Entities.Channel", b =>
                {
                    b.Property<Guid>("ChannelID")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("ChannelName")
                        .IsRequired();

                    b.Property<DateTime>("DateCreated");

                    b.Property<DateTime>("DateModified");

                    b.HasKey("ChannelID");

                    b.ToTable("Channels");
                });

            modelBuilder.Entity("TitanMessaging.Core.Entities.Message", b =>
                {
                    b.Property<Guid>("MessageID")
                        .ValueGeneratedOnAdd();

                    b.Property<Guid?>("ChannelID");

                    b.Property<string>("Content");

                    b.Property<DateTime>("DateCreated");

                    b.Property<DateTime>("DateModified");

                    b.Property<Guid?>("UserID");

                    b.HasKey("MessageID");

                    b.HasIndex("ChannelID");

                    b.HasIndex("UserID");

                    b.ToTable("Messages");
                });

            modelBuilder.Entity("TitanMessaging.Core.Entities.User", b =>
                {
                    b.Property<Guid>("UserID");

                    b.Property<DateTime>("DateCreated");

                    b.Property<DateTime>("DateModified");

                    b.Property<string>("FirstName");

                    b.Property<string>("Image");

                    b.Property<string>("LastName");

                    b.HasKey("UserID");

                    b.ToTable("Users");
                });

            modelBuilder.Entity("TitanMessaging.Core.Entities.UserChannel", b =>
                {
                    b.Property<Guid>("ChannelID");

                    b.Property<Guid>("UserID");

                    b.HasKey("ChannelID", "UserID");

                    b.HasIndex("UserID");

                    b.ToTable("UserChannel");
                });

            modelBuilder.Entity("TitanMessaging.Core.Entities.Message", b =>
                {
                    b.HasOne("TitanMessaging.Core.Entities.Channel", "Channel")
                        .WithMany("Messages")
                        .HasForeignKey("ChannelID");

                    b.HasOne("TitanMessaging.Core.Entities.User", "User")
                        .WithMany()
                        .HasForeignKey("UserID");
                });

            modelBuilder.Entity("TitanMessaging.Core.Entities.UserChannel", b =>
                {
                    b.HasOne("TitanMessaging.Core.Entities.Channel", "Channel")
                        .WithMany("UserChannels")
                        .HasForeignKey("ChannelID")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("TitanMessaging.Core.Entities.User", "User")
                        .WithMany("UserChannels")
                        .HasForeignKey("UserID")
                        .OnDelete(DeleteBehavior.Cascade);
                });
#pragma warning restore 612, 618
        }
    }
}
